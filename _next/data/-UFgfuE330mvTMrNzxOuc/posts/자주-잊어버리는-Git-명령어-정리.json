{"pageProps":{"frontMatter":{"title":"자주 잊어버리는 Git 명령어 정리","description":null,"uploaded":"2022-03-22T14:23:27.979Z","updated":"2022-03-22T14:23:27.979Z","tags":["git"],"draft":false},"slug":"자주-잊어버리는-Git-명령어-정리","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h2: \"h2\",\n      code: \"code\",\n      p: \"p\",\n      ul: \"ul\",\n      li: \"li\",\n      a: \"a\"\n    }, _provideComponents(), props.components), {Image} = _components;\n    if (!Image) _missingMdxReference(\"Image\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h2, {\n        children: _jsx(_components.code, {\n          children: \"git rebase\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"또는 \", _jsx(_components.code, {\n          children: \"git rebase <basebranch> <targetbranch>\"\n        })]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"두 브랜치를 깔끔하게 합치는 명령어. merge랑은 다르게 history가 한 라인으로 깔끔하게 정리된다.\\n명령어에 넘겨줄 argument가 없는 경우엔 합치고자 하는 브랜치(\", _jsx(_components.code, {\n          children: \"experiment\"\n        }), \")로 \", _jsx(_components.code, {\n          children: \"checkout\"\n        }), \"한 후 합칠 브랜치(\", _jsx(_components.code, {\n          children: \"master\"\n        }), \")로 명령어를 실행해야 한다.\"]\n      }), \"\\n\", _jsx(Image, {\n        src: \"/git-two-branches.png\",\n        width: \"420\",\n        height: \"200\",\n        source: \"rebase 전\"\n      }), \"\\n\", _jsx(Image, {\n        src: \"/git-rebase.png\",\n        width: \"600\",\n        height: \"200\",\n        source: \"rebase 후\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: _jsx(_components.code, {\n          children: \"git clean -fdx\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"untracked 파일들(한번도 커밋되지 않은 파일)을 삭제하는 명령어.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"-fdx\"\n        }), \"는 옵션이며 각각\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"f(force)\"\n          }), \": 해당 옵션이 없으면 git은 파일을 삭제할 수 없다.\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"d(recurse into directory)\"\n          }), \" : 폴더까지 다 재귀적으로 탐색해서 삭제한다\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.code, {\n            children: \"x\"\n          }), \" : gitignore 같은 ignore rule도 무시하고 다 삭제한다.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: _jsx(_components.code, {\n          children: \"git restore .\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"현재 디렉터리(\", _jsx(_components.code, {\n          children: \".\"\n        }), \")의 변경점이 생긴 파일들의 변경을 없앤다. (변경점이 생긴 파일들을 마지막 커밋 상태로 돌려놓는다.)\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"참고\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-Rebase-%ED%95%98%EA%B8%B0\",\n          children: \"Git-scm\"\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true}