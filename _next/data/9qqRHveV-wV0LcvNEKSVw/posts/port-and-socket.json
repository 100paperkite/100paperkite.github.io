{"pageProps":{"frontMatter":{"title":"포트(Port)와 소켓(Socket)","description":null,"uploaded":"2022-12-15","updated":null,"tags":["network"],"draft":false},"slug":"port-and-socket","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h2: \"h2\",\n      p: \"p\",\n      code: \"code\",\n      pre: \"pre\",\n      a: \"a\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h2, {\n        children: \"포트와 소켓\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"포트와 소켓은 둘 다 네트워크 상에서 프로세스 간 통신을 위한 것이다\", _jsx(\"small\", {\n          children: \"(우리가 아는 TCP와 UDP가 포트 번호를 통해서 통신하는 프로토콜이다).\"\n        }), \" 포트는 프로세스를 서로 식별하기 위해 필요하고, 소켓은 프로세스 간 연결 및 데이터 송수신을 담당한다. 소켓은 OS가 프로세스의 통신을 위해 사용하는 객체 같은 개념이며 실제로 UNIX에서는 소켓은 그냥 파일이다\", _jsx(\"small\", {\n          children: \"(파일에 데이터를 쓰고 읽으면서 통신).\"\n        })]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"만약 컴퓨터를 아파트라고 한다면, 프로세스는 아파트에 있는 집들 중 하나가 되고, 소켓은 해당 집의 문이라고 볼 수 있다 \", _jsx(\"small\", {\n          children: \"(집에 문은 여러개가 존재할 것이다)\"\n        })]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"소켓의 식별자\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"특정 포트로 열린 프로세스가 여러 개의 소켓을 가질 수 있다면, 소켓은 어떻게 식별할까?\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"TCP에서 소켓은 \", _jsx(_components.code, {\n          children: \"클라이언트IP\"\n        }), \" \", _jsx(_components.code, {\n          children: \"포트\"\n        }), \", \", _jsx(_components.code, {\n          children: \"서버IP\"\n        }), \" \", _jsx(_components.code, {\n          children: \"포트\"\n        }), \" 총 4가지로 정보로 식별되며, 식별자가 중복되지 않는다면 소켓은 계속 만들 수 있다.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"그렇기 때문에, 서버는 요청하는 클라이언트+포트 조합만 다르다면 계속 연결을 맺을 수 있고\", _jsx(\"small\", {\n          children: \"(단 연결을 많이 맺을 수록 서버의 처리는 느려질 것)\"\n        }), \", 클라이언트가 하나의 서버와 여러 커넥션을 맺고 싶다면, 클라이언트의 포트 번호를 다르게 해서 연결해야 한다.\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"소켓 연결 확인해보기\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"python -m http.server 8080\"\n        }), \" 으로 파이썬 웹서버를 8080포트로 간단하게 띄워보자.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"그리고 \", _jsx(_components.code, {\n          children: \"netstat\"\n        }), \" 으로 연결을 확인해보면 아래처럼 8080포트에서 연결 대기중임을 볼 수 있다.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"Proto Recv-Q Send-Q  Local Address    Foreign Address    (state)\\ntcp46      0      0  *.8080           *.*                LISTEN\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"그리고 웹 브라우저로 서버에 접속하고 다시 확인해보면 아래처럼 연결이 맺어진 걸 확인해볼 수 있다. \", _jsx(\"small\", {\n          children: \"(클라이언트 포트는 브라우저가 OS에 가용 포트 번호를 조회해서 랜덤으로 정한다.)\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"Proto Recv-Q Send-Q  Local Address    Foreign Address    (state)\\ntcp6       0      0  ::1.8080         ::1.50565          ESTABLISHED\\ntcp6       0      0  ::1.50565        ::1.8080           ESTABLISHED\\n\"\n        })\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"참고\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"https://softwareengineering.stackexchange.com/questions/171734/difference-between-a-socket-and-a-port\",\n          children: \"https://softwareengineering.stackexchange.com/questions/171734/difference-between-a-socket-and-a-port\"\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}